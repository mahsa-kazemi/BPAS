Terminals unused in grammar

   DIVIDE


State 10 conflicts: 2 shift/reduce
State 13 conflicts: 8 reduce/reduce
State 21 conflicts: 2 shift/reduce


Grammar

    0 $accept: polynomial $end

    1 polynomial: polynomial poly
    2           | polynomial other
    3           | %empty

    4 poly: MINUS poly
    5     | PLUS poly
    6     | poly MINUS poly
    7     | poly PLUS poly
    8     | poly MULTIPLY poly
    9     | L_BRACE poly R_BRACE
   10     | L_BRACE poly R_BRACE POWER exponent
   11     | term

   12 term: coef
   13     | powerVariable

   14 powerVariable: variable
   15              | variable POWER exponent

   16 variable: VAR

   17 exponent: NUM

   18 coef: NUM
   19     | RATNUM

   20 other: variable
   21      | LS_BRACE other
   22      | other RS_BRACE
   23      | other COMMA variable


Terminals, with rules where they appear

$end (0) 0
error (256)
RATNUM (258) 19
VAR (259) 16
NUM (260) 17 18
MULTIPLY (261) 8
PLUS (262) 5 7
MINUS (263) 4 6
L_BRACE (264) 9 10
R_BRACE (265) 9 10
LS_BRACE (266) 21
RS_BRACE (267) 22
DIVIDE (268)
POWER (269) 10 15
COMMA (270) 23
UMINUS (271)


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
polynomial (18)
    on left: 1 2 3, on right: 0 1 2
poly (19)
    on left: 4 5 6 7 8 9 10 11, on right: 1 4 5 6 7 8 9 10
term (20)
    on left: 12 13, on right: 11
powerVariable (21)
    on left: 14 15, on right: 13
variable (22)
    on left: 16, on right: 14 15 20 23
exponent (23)
    on left: 17, on right: 10 15
coef (24)
    on left: 18 19, on right: 12
other (25)
    on left: 20 21 22 23, on right: 2 21 22 23


State 0

    0 $accept: . polynomial $end

    $default  reduce using rule 3 (polynomial)

    polynomial  go to state 1


State 1

    0 $accept: polynomial . $end
    1 polynomial: polynomial . poly
    2           | polynomial . other

    $end      shift, and go to state 2
    RATNUM    shift, and go to state 3
    VAR       shift, and go to state 4
    NUM       shift, and go to state 5
    PLUS      shift, and go to state 6
    MINUS     shift, and go to state 7
    L_BRACE   shift, and go to state 8
    LS_BRACE  shift, and go to state 9

    poly           go to state 10
    term           go to state 11
    powerVariable  go to state 12
    variable       go to state 13
    coef           go to state 14
    other          go to state 15


State 2

    0 $accept: polynomial $end .

    $default  accept


State 3

   19 coef: RATNUM .

    $default  reduce using rule 19 (coef)


State 4

   16 variable: VAR .

    $default  reduce using rule 16 (variable)


State 5

   18 coef: NUM .

    $default  reduce using rule 18 (coef)


State 6

    5 poly: PLUS . poly

    RATNUM   shift, and go to state 3
    VAR      shift, and go to state 4
    NUM      shift, and go to state 5
    PLUS     shift, and go to state 6
    MINUS    shift, and go to state 7
    L_BRACE  shift, and go to state 8

    poly           go to state 16
    term           go to state 11
    powerVariable  go to state 12
    variable       go to state 17
    coef           go to state 14


State 7

    4 poly: MINUS . poly

    RATNUM   shift, and go to state 3
    VAR      shift, and go to state 4
    NUM      shift, and go to state 5
    PLUS     shift, and go to state 6
    MINUS    shift, and go to state 7
    L_BRACE  shift, and go to state 8

    poly           go to state 18
    term           go to state 11
    powerVariable  go to state 12
    variable       go to state 17
    coef           go to state 14


State 8

    9 poly: L_BRACE . poly R_BRACE
   10     | L_BRACE . poly R_BRACE POWER exponent

    RATNUM   shift, and go to state 3
    VAR      shift, and go to state 4
    NUM      shift, and go to state 5
    PLUS     shift, and go to state 6
    MINUS    shift, and go to state 7
    L_BRACE  shift, and go to state 8

    poly           go to state 19
    term           go to state 11
    powerVariable  go to state 12
    variable       go to state 17
    coef           go to state 14


State 9

   21 other: LS_BRACE . other

    VAR       shift, and go to state 4
    LS_BRACE  shift, and go to state 9

    variable  go to state 20
    other     go to state 21


State 10

    1 polynomial: polynomial poly .
    6 poly: poly . MINUS poly
    7     | poly . PLUS poly
    8     | poly . MULTIPLY poly

    MULTIPLY  shift, and go to state 22
    PLUS      shift, and go to state 23
    MINUS     shift, and go to state 24

    PLUS      [reduce using rule 1 (polynomial)]
    MINUS     [reduce using rule 1 (polynomial)]
    $default  reduce using rule 1 (polynomial)


State 11

   11 poly: term .

    $default  reduce using rule 11 (poly)


State 12

   13 term: powerVariable .

    $default  reduce using rule 13 (term)


State 13

   14 powerVariable: variable .
   15              | variable . POWER exponent
   20 other: variable .

    POWER  shift, and go to state 25

    $end      reduce using rule 14 (powerVariable)
    $end      [reduce using rule 20 (other)]
    RATNUM    reduce using rule 14 (powerVariable)
    RATNUM    [reduce using rule 20 (other)]
    VAR       reduce using rule 14 (powerVariable)
    VAR       [reduce using rule 20 (other)]
    NUM       reduce using rule 14 (powerVariable)
    NUM       [reduce using rule 20 (other)]
    PLUS      reduce using rule 14 (powerVariable)
    PLUS      [reduce using rule 20 (other)]
    MINUS     reduce using rule 14 (powerVariable)
    MINUS     [reduce using rule 20 (other)]
    L_BRACE   reduce using rule 14 (powerVariable)
    L_BRACE   [reduce using rule 20 (other)]
    LS_BRACE  reduce using rule 14 (powerVariable)
    LS_BRACE  [reduce using rule 20 (other)]
    RS_BRACE  reduce using rule 20 (other)
    COMMA     reduce using rule 20 (other)
    $default  reduce using rule 14 (powerVariable)


State 14

   12 term: coef .

    $default  reduce using rule 12 (term)


State 15

    2 polynomial: polynomial other .
   22 other: other . RS_BRACE
   23      | other . COMMA variable

    RS_BRACE  shift, and go to state 26
    COMMA     shift, and go to state 27

    $default  reduce using rule 2 (polynomial)


State 16

    5 poly: PLUS poly .
    6     | poly . MINUS poly
    7     | poly . PLUS poly
    8     | poly . MULTIPLY poly

    MULTIPLY  shift, and go to state 22

    $default  reduce using rule 5 (poly)


State 17

   14 powerVariable: variable .
   15              | variable . POWER exponent

    POWER  shift, and go to state 25

    $default  reduce using rule 14 (powerVariable)


State 18

    4 poly: MINUS poly .
    6     | poly . MINUS poly
    7     | poly . PLUS poly
    8     | poly . MULTIPLY poly

    $default  reduce using rule 4 (poly)


State 19

    6 poly: poly . MINUS poly
    7     | poly . PLUS poly
    8     | poly . MULTIPLY poly
    9     | L_BRACE poly . R_BRACE
   10     | L_BRACE poly . R_BRACE POWER exponent

    MULTIPLY  shift, and go to state 22
    PLUS      shift, and go to state 23
    MINUS     shift, and go to state 24
    R_BRACE   shift, and go to state 28


State 20

   20 other: variable .

    $default  reduce using rule 20 (other)


State 21

   21 other: LS_BRACE other .
   22      | other . RS_BRACE
   23      | other . COMMA variable

    RS_BRACE  shift, and go to state 26
    COMMA     shift, and go to state 27

    RS_BRACE  [reduce using rule 21 (other)]
    COMMA     [reduce using rule 21 (other)]
    $default  reduce using rule 21 (other)


State 22

    8 poly: poly MULTIPLY . poly

    RATNUM   shift, and go to state 3
    VAR      shift, and go to state 4
    NUM      shift, and go to state 5
    PLUS     shift, and go to state 6
    MINUS    shift, and go to state 7
    L_BRACE  shift, and go to state 8

    poly           go to state 29
    term           go to state 11
    powerVariable  go to state 12
    variable       go to state 17
    coef           go to state 14


State 23

    7 poly: poly PLUS . poly

    RATNUM   shift, and go to state 3
    VAR      shift, and go to state 4
    NUM      shift, and go to state 5
    PLUS     shift, and go to state 6
    MINUS    shift, and go to state 7
    L_BRACE  shift, and go to state 8

    poly           go to state 30
    term           go to state 11
    powerVariable  go to state 12
    variable       go to state 17
    coef           go to state 14


State 24

    6 poly: poly MINUS . poly

    RATNUM   shift, and go to state 3
    VAR      shift, and go to state 4
    NUM      shift, and go to state 5
    PLUS     shift, and go to state 6
    MINUS    shift, and go to state 7
    L_BRACE  shift, and go to state 8

    poly           go to state 31
    term           go to state 11
    powerVariable  go to state 12
    variable       go to state 17
    coef           go to state 14


State 25

   15 powerVariable: variable POWER . exponent

    NUM  shift, and go to state 32

    exponent  go to state 33


State 26

   22 other: other RS_BRACE .

    $default  reduce using rule 22 (other)


State 27

   23 other: other COMMA . variable

    VAR  shift, and go to state 4

    variable  go to state 34


State 28

    9 poly: L_BRACE poly R_BRACE .
   10     | L_BRACE poly R_BRACE . POWER exponent

    POWER  shift, and go to state 35

    $default  reduce using rule 9 (poly)


State 29

    6 poly: poly . MINUS poly
    7     | poly . PLUS poly
    8     | poly . MULTIPLY poly
    8     | poly MULTIPLY poly .

    $default  reduce using rule 8 (poly)


State 30

    6 poly: poly . MINUS poly
    7     | poly . PLUS poly
    7     | poly PLUS poly .
    8     | poly . MULTIPLY poly

    MULTIPLY  shift, and go to state 22

    $default  reduce using rule 7 (poly)


State 31

    6 poly: poly . MINUS poly
    6     | poly MINUS poly .
    7     | poly . PLUS poly
    8     | poly . MULTIPLY poly

    MULTIPLY  shift, and go to state 22

    $default  reduce using rule 6 (poly)


State 32

   17 exponent: NUM .

    $default  reduce using rule 17 (exponent)


State 33

   15 powerVariable: variable POWER exponent .

    $default  reduce using rule 15 (powerVariable)


State 34

   23 other: other COMMA variable .

    $default  reduce using rule 23 (other)


State 35

   10 poly: L_BRACE poly R_BRACE POWER . exponent

    NUM  shift, and go to state 32

    exponent  go to state 36


State 36

   10 poly: L_BRACE poly R_BRACE POWER exponent .

    $default  reduce using rule 10 (poly)
